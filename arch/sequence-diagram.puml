@startuml
title Trust Decision Sequence Diagram for Checking Trust between TrustRobots

participant "TrustRobot A" as TR_A
participant "TrustRobot B" as TR_B
participant TrustManagementSystem as TMS
participant DirectTrust as DTrust
participant IndirectTrust as ITrust
participant ContextualInformation as CInfo
participant Experience
participant CentralAuthority as CA

TR_A -> TR_B: requestTaskCompletion()
note right of TR_B: TR_B completes the task

TR_B --> TR_A: reportTaskCompletion()

TR_A -> TMS: evaluateCurrentInteraction(TR_B)
TMS -> DTrust: evaluateCurrentDirectTrust(TR_B)
DTrust -> Experience: logExperience(timestamp, urgency, trustChange)
DTrust --> TMS: return dTrustChange



alt if other TrustRobot is present
    TMS -> ITrust: getTrustOpinion(TR_B)
    ITrust --> TMS: return iTrustChange
end

TMS -> CInfo: getContextInfo(TR_B)
CInfo --> TMS: return contextData

TMS -> TMS: calculateTrustScore(dTrustChange, iTrustChange, contextData)

TMS --> TR_A: updateTrustScore(trustChange, reputationChange, contextData)

TR_A -> Experience: logExperience(timestamp, urgency, trustChange, reputationChange, contextData)
note left of Experience: Log the trust decision and factors

alt Central Authority Present
    TR_A -> CA: logExperience(timestamp, urgency, trustChange, reputationChange, contextData, TR_A)
    note right of CA: CA logs who sent the experience log
end

@enduml

